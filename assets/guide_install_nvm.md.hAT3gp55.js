import{_ as s,c as a,o as i,a1 as e}from"./chunks/framework.BymHr5sA.js";const b=JSON.parse('{"title":"安装 nvm | nrm 和 yarn","description":"","frontmatter":{},"headers":[],"relativePath":"guide/install/nvm.md","filePath":"guide/install/nvm.md","lastUpdated":1708678445000}'),t={name:"guide/install/nvm.md"},n=e(`<h1 id="安装-nvm-nrm-和-yarn" tabindex="-1">安装 nvm | nrm 和 yarn <a class="header-anchor" href="#安装-nvm-nrm-和-yarn" aria-label="Permalink to &quot;安装 nvm | nrm 和 yarn&quot;">​</a></h1><p>目前主流的 node 版本管理工具有两种，<a href="https://github.com/creationix/nvm" target="_blank" rel="noreferrer">nvm</a> 和 <a href="https://github.com/tj/n" target="_blank" rel="noreferrer">n</a>。 两者差异挺大的，具体分析可以参考一下淘宝 FED 团队的一篇文章：<a href="http://taobaofed.org/blog/2015/11/17/nvm-or-n/" target="_blank" rel="noreferrer">管理 node 版本，选择 nvm 还是 n？</a>。</p><p>这里选择 nvm 管理 node 版本。</p><h2 id="安装-nvm" tabindex="-1">安装 nvm <a class="header-anchor" href="#安装-nvm" aria-label="Permalink to &quot;安装 nvm&quot;">​</a></h2><blockquote><p><strong>安装前请保证电脑已经正确安装并配置好了Oh-My-Zsh。</strong></p></blockquote><p>安装可以参考<a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">nvm</a>项目的 README 文档，可以在下面的命令二选一条在终端执行。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-0NkZw" id="tab-z6oAOZh" checked><label for="tab-z6oAOZh">国内镜像加速</label><input type="radio" name="group-0NkZw" id="tab-4qL3GVG"><label for="tab-4qL3GVG">GitHub</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 wget 命令安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qO-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.gitmirror.com/nvm-sh/nvm/v0.39.7/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 curl 命令安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.gitmirror.com/nvm-sh/nvm/v0.39.7/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 wget 命令安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qO-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 curl 命令安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div></div></div><p>如果安装并配置好了 Oh-My-Zsh 终端的话，默认自动将对应的配置写入了 <code>~/.bash_profile</code>, <code>~/.zshrc</code>, <code>~/.profile</code> 或 <code>~/.zshrc</code> 文件中，内容为：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$([ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot; ] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/.nvm&quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/nvm&quot;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # This loads nvm</span></span></code></pre></div><p>可以通过命令 <code>source ~/.zshrc</code> 加载，或者重新打开一个终端。</p><blockquote><p>执行上面的命令时请在用户家目录执行。进入用户家目录的命令为：<code>cd ~</code>，检查是否为用户家目录的命令 <code>pwd</code>，显示为：<code>~/你的用户名</code>。</p></blockquote><h2 id="简单使用-nvm" tabindex="-1">简单使用 nvm <a class="header-anchor" href="#简单使用-nvm" aria-label="Permalink to &quot;简单使用 nvm&quot;">​</a></h2><h3 id="查看可供使用稳定版本" tabindex="-1">查看可供使用稳定版本 <a class="header-anchor" href="#查看可供使用稳定版本" aria-label="Permalink to &quot;查看可供使用稳定版本&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls-remote</span></span></code></pre></div><blockquote><p>NodeJS 的版本发布很频繁，一般可以在<a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">NodeJS 官网</a>看到 LTS 版本进行下载。</p></blockquote><h3 id="查看本地已经有的-nodejs" tabindex="-1">查看本地已经有的 NodeJS <a class="header-anchor" href="#查看本地已经有的-nodejs" aria-label="Permalink to &quot;查看本地已经有的 NodeJS&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><h3 id="安装指定版本的-nodejs" tabindex="-1">安装指定版本的 NodeJS <a class="header-anchor" href="#安装指定版本的-nodejs" aria-label="Permalink to &quot;安装指定版本的 NodeJS&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v16.19.1</span></span></code></pre></div><h3 id="指定默认的-nodejs-版本" tabindex="-1">指定默认的 NodeJS 版本 <a class="header-anchor" href="#指定默认的-nodejs-版本" aria-label="Permalink to &quot;指定默认的 NodeJS 版本&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v16.19.1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 指定默认的NodeJS版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span></span></code></pre></div><blockquote><p>如果是切换不同版本的node，请确保对应的依赖已经安装，比如<code>yarn</code>，因为不同版本的node，对应的bin目录不一致，目录为：<code>~/.nvm/versions/node/v16.19.1/bin</code>。</p></blockquote><h3 id="查看系统当前使用的-nodejs-版本" tabindex="-1">查看系统当前使用的 NodeJS 版本 <a class="header-anchor" href="#查看系统当前使用的-nodejs-版本" aria-label="Permalink to &quot;查看系统当前使用的 NodeJS 版本&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current</span></span></code></pre></div><blockquote><p>nvm管理的node安装的目录在 <code>~/.nvm/versions/node/</code> 下。</p></blockquote><h3 id="卸载指定的-nodejs-版本" tabindex="-1">卸载指定的 NodeJS 版本 <a class="header-anchor" href="#卸载指定的-nodejs-版本" aria-label="Permalink to &quot;卸载指定的 NodeJS 版本&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v16.19.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 卸载v16.19.1</span></span></code></pre></div><p>至此，nvm 相关的基本操作完成，更多的操作请查看<a href="https://github.com/creationix/nvm" target="_blank" rel="noreferrer">nvm</a>项目的 README 说明。</p><h2 id="nrm" tabindex="-1"><a href="https://github.com/Pana/nrm" target="_blank" rel="noreferrer">nrm</a> <a class="header-anchor" href="#nrm" aria-label="Permalink to &quot;[nrm](https://github.com/Pana/nrm)&quot;">​</a></h2><p><code>nrm</code> 是 <code>npm</code> 镜像仓库管理命令，可以帮助我们管理 <code>npm</code> 镜像资源的下载地址。</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span></span></code></pre></div><blockquote><p>鉴于国内网络环境，如果下载速度慢或者下载失败，建议修改 npm 的从淘宝镜像地址下载资源，可以执行命令：<code>npm install -g nrm --registry=https://registry.npmmirror.com/</code></p></blockquote><h3 id="简单使用-nrm" tabindex="-1">简单使用 nrm <a class="header-anchor" href="#简单使用-nrm" aria-label="Permalink to &quot;简单使用 nrm&quot;">​</a></h3><h4 id="查看可用源" tabindex="-1">查看可用源 <a class="header-anchor" href="#查看可用源" aria-label="Permalink to &quot;查看可用源&quot;">​</a></h4><div class="language-ash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nrm ls</span></span></code></pre></div><h4 id="使用指定源" tabindex="-1">使用指定源 <a class="header-anchor" href="#使用指定源" aria-label="Permalink to &quot;使用指定源&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> taobao</span></span></code></pre></div><h4 id="检查当前使用源" tabindex="-1">检查当前使用源 <a class="header-anchor" href="#检查当前使用源" aria-label="Permalink to &quot;检查当前使用源&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> current</span></span></code></pre></div><blockquote><p>此时，在 <code>~/.npmrc</code> 配置中自动配置：<code>registry=https://registry.npmmirror.com/</code></p></blockquote><h2 id="安装-yarn" tabindex="-1">安装 yarn <a class="header-anchor" href="#安装-yarn" aria-label="Permalink to &quot;安装 yarn&quot;">​</a></h2><p><a href="https://yarn.bootcss.com/docs/install/#mac-stable" target="_blank" rel="noreferrer">参考这里</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span></span></code></pre></div><h2 id="安装全局依赖" tabindex="-1">安装全局依赖 <a class="header-anchor" href="#安装全局依赖" aria-label="Permalink to &quot;安装全局依赖&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cross-env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> live-server</span></span></code></pre></div><h4 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h4><ul><li><a href="https://segmentfault.com/a/1190000004404505" target="_blank" rel="noreferrer">node 版本管理工具 nvm-Mac 下安装及使用</a></li></ul>`,48),h=[n];function l(p,r,d,o,k,c){return i(),a("div",null,h)}const F=s(t,[["render",l]]);export{b as __pageData,F as default};
