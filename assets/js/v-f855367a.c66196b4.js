"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[198],{3833:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-f855367a",path:"/config/mkcert.html",title:"配置 mkcert",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"初始化配置",slug:"初始化配置",children:[]},{level:3,title:"创建统一存放目录",slug:"创建统一存放目录",children:[]},{level:3,title:"生成证书",slug:"生成证书",children:[]},{level:3,title:"Nginx配置SSL证书",slug:"nginx配置ssl证书",children:[]},{level:3,title:"在laravel-mix项目中使用",slug:"在laravel-mix项目中使用",children:[]},{level:3,title:"在 Docker nginx 中使用",slug:"在-docker-nginx-中使用",children:[]}],filePathRelative:"config/mkcert.md",git:{updatedTime:1642493884e3,contributors:[{name:"curder",email:"q.curder@gmail.com",commits:1}]}}},1596:(s,n,a)=>{a.r(n),a.d(n,{default:()=>i});var e=a(6252),p=a(8037),l=a(51);const t=(0,e.uE)('<h1 id="配置-mkcert" tabindex="-1"><a class="header-anchor" href="#配置-mkcert" aria-hidden="true">#</a> 配置 mkcert</h1><h3 id="初始化配置" tabindex="-1"><a class="header-anchor" href="#初始化配置" aria-hidden="true">#</a> 初始化配置</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mkcert -install\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="创建统一存放目录" tabindex="-1"><a class="header-anchor" href="#创建统一存放目录" aria-hidden="true">#</a> 创建统一存放目录</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> -p ~/.certs/ <span class="token comment"># 创建对应存放目录</span>\n\n<span class="token function">ls</span> -l ~/.certs <span class="token comment"># 查看目录是否存在</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="生成证书" tabindex="-1"><a class="header-anchor" href="#生成证书" aria-hidden="true">#</a> 生成证书</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">ssl_path</span><span class="token operator">=~</span>/.certs\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">domain</span><span class="token operator">=</span>example.test\n\n<span class="token function">mkdir</span> -p <span class="token variable">${ssl_path}</span>/<span class="token variable">${domain}</span> <span class="token comment"># 创建证书对应目录</span>\n\nmkcert -key-file <span class="token variable">${ssl_path}</span>/<span class="token variable">${domain}</span>/privkey.pem <span class="token punctuation">\\</span>\n       -cert-file <span class="token variable">${ssl_path}</span>/<span class="token variable">${domain}</span>/fullchain.pem <span class="token punctuation">\\</span>\n       <span class="token string">&quot;www.<span class="token variable">${domain}</span>&quot;</span> <span class="token string">&quot;m.<span class="token variable">${domain}</span>&quot;</span> <span class="token string">&quot;<span class="token variable">${domain}</span>&quot;</span> <span class="token string">&quot;*.<span class="token variable">${domain}</span>&quot;</span> <span class="token string">&quot;localhost&quot;</span>\n\n<span class="token comment"># ls -l `echo ${ssl_path}/${domain}` # 查看证书文件</span>\n<span class="token comment"># ls -ld `echo ${ssl_path}/${domain}` # 证书所在路径</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>在执行上面命令的时候，<code>ssl_path</code>可以选择合适的证书存放的路径，<code>domain</code> 根据实际情况定义，<strong>可以根据实际情况后期增减重新执行命令生成</strong>。</p></blockquote><p>下图是执行成功的一些信息。</p><p><img src="'+p+'" alt="mkcert notification message"></p><h3 id="nginx配置ssl证书" tabindex="-1"><a class="header-anchor" href="#nginx配置ssl证书" aria-hidden="true">#</a> Nginx配置SSL证书</h3><p>以MAMP客户端为例。</p><ol><li>选择要加密的主机</li><li>选择SSL选项</li><li>打开SSL选项</li><li>点击文件夹选择刚刚申请的证书文件，注意一般是<code>fullchain.pem</code></li><li>点击文件夹选择刚刚申请的密钥文件，注意一般是<code>privkey.pem</code></li><li>可选操作，是否强制<code>http</code>跳转到<code>https</code>访问</li><li>点击保存，并重启服务</li><li>如果配置成功一般在列表处会有一把锁</li></ol><p><img src="'+l+'" alt="mkcert notification message"></p><h3 id="在laravel-mix项目中使用" tabindex="-1"><a class="header-anchor" href="#在laravel-mix项目中使用" aria-hidden="true">#</a> 在<code>laravel-mix</code>项目中使用</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>mix<span class="token punctuation">.</span><span class="token function">browserSync</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    proxy<span class="token operator">:</span> <span class="token string">&quot;https://www.example.com&quot;</span><span class="token punctuation">,</span>\n    https<span class="token operator">:</span> <span class="token punctuation">{</span>\n        key<span class="token operator">:</span> <span class="token string">&quot;~/.certs/example.com/privkey.pem&quot;</span><span class="token punctuation">,</span>\n        cert<span class="token operator">:</span> <span class="token string">&quot;~/.certs/example.com/fullchain.pem&quot;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>配置之前需要保证<code>https://example.com</code>能正常访问。</p><p><code>key</code> 和 <code>cert</code> 的配置跟当前生成证书时指定的文件保持一致。</p></blockquote><h3 id="在-docker-nginx-中使用" tabindex="-1"><a class="header-anchor" href="#在-docker-nginx-中使用" aria-hidden="true">#</a> 在 Docker nginx 中使用</h3><p>在项目的配置文件中添加如下样例代码：</p><div class="language-nginx ext-nginx line-numbers-mode"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">80</span></span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">server_name</span>  example.com</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://<span class="token variable">$server_name</span><span class="token variable">$request_uri</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n    <span class="token directive"><span class="token keyword">listen</span>       <span class="token number">443</span> ssl</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">server_name</span>  example.com</span><span class="token punctuation">;</span>\n\n    <span class="token comment"># 容器中公、私钥对应路径</span>\n    <span class="token directive"><span class="token keyword">ssl_certificate</span>     /etc/nginx/ssl/example.com/fullchain.pem</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">ssl_certificate_key</span> /etc/nginx/ssl/example.com/privkey.pem</span><span class="token punctuation">;</span>\n\n    <span class="token directive"><span class="token keyword">root</span>   /usr/share/nginx/html</span><span class="token punctuation">;</span>\n    <span class="token directive"><span class="token keyword">index</span>  index.html index.htm</span><span class="token punctuation">;</span>\n\n    <span class="token comment"># ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>',20),c={},i=(0,a(3744).Z)(c,[["render",function(s,n){return t}]])},3744:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}},51:(s,n,a)=>{s.exports=a.p+"assets/img/mamp-apply-ssl-to-protected-website.9237fd7f.png"},8037:(s,n,a)=>{s.exports=a.p+"assets/img/mkcert-notification-message.4358eb7b.jpeg"}}]);